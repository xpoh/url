/*
 * url butty maker
 *
 * url butty maker
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"github.com/gin-gonic/gin"
	"go.uber.org/zap"
	"net/http"
	"url/internal/butty"
)

type jUrl struct {
	Url string `json:"url"`
}

// ButtyUrlPost - create butty url
func ButtyUrlPost(c *gin.Context) {
	bs := butty.GetService()
	bs.UrlPostCounter.Inc()

	j := jUrl{}
	err := c.BindJSON(&j)
	if err != nil {
		bs.Logger.Error("Error bing json from request")
	}
	bs.Logger.Info("Bind json from request", zap.String("url", j.Url))

	buttyUrl, err := bs.Storage.NewButtyUrl(j.Url)
	if err != nil {
		bs.Logger.Error("NewButtyUrl", zap.Error(err))
		c.JSON(http.StatusInternalServerError, gin.H{"message": "Error create butty link"})
		return
	}
	bUrl := bs.Cfg.Server.ServerName + "/" + buttyUrl
	bs.Logger.Debug("GET return", zap.String("burl", bUrl))
	c.JSON(http.StatusOK, gin.H{"url": bUrl})
}

// ByButtyGet - redirect to url by butty
func ByButtyGet(c *gin.Context) {
	bs := butty.GetService()
	bs.UrlGetCounter.Inc()

	param := c.Param("url")
	bs.Logger.Debug("GET param", zap.String("burl", param))

	fullUrl, err := bs.Storage.GetFullUrlByButty(param)
	if err != nil {
		bs.Logger.Error("GetFullUrlByButty", zap.Error(err))
		c.JSON(http.StatusNotFound, gin.H{"message": "link not found"})
		return
	}
	bs.Logger.Debug("redirect", zap.String("url", fullUrl))
	c.Redirect(http.StatusMovedPermanently, fullUrl)
	//c.JSON(http.StatusOK, gin.H{"url": fullUrl})
}
